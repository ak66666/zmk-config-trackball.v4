#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
//#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/ext_power.h>
//#include <behaviors/mouse_keys.dtsi>
//#include <input/processors.dtsi>


// Label re-defined: Fingers - Front, Thumb - Backwards

#define FRONT_RIGHT 0
#define FRONT_LEFT 1
#define BACK_LEFT 2
#define BACK_RIGHT 3
#define FRONT_SCROLL 4
#define BACKWARD_SCROLL 5

// Mouse speed increased
#define ZMK_POINTING_DEFAULT_MOVE_VAL 1000  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15    // default: 10
//#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

//        map = <
//   		 RC(0,2)    			     	RC(0,5)
//		 RC(0,1)	/* Ball */	        RC(0,4)
//	         RC(0,0)    RC(0,12)	RC(0,11)        RC(0,3)
//                   /* Buttons on top of the middle deck */
//  		       /*  BTReset BTSelect Unlock  */ 
//                          RC(0,8) RC(0,7)  RC(0,6)        
//               /* Slider switches on the bottom of the middle deck */
//		/* Orientation (Front/Backwards)   Handiness L/R     */
//                       RC(0,10)        	     RC(0,9)              
//        >;

// &mkp LCLK &mkp MCLK &mkp RCLK  &none

	// Layer 0
        FRONT_RIGHT {
            bindings = <
		&mo BACKWARD_SCROLL				&mkp LCLK
		&mkp MCLK					&mkp MCLK 				
		&mkp RCLK	      &kp A    &kp B		&kp ESC
               /* Orientation (Front/Backward)   Handiness L/R     */
   	/*	  &bt BT_CLR  &bt BT_NXT   &studio_unlock	*/
			&kp 1  &kp 2  &kp 3
               /* Orientation (Front/Backward)   Handiness L/R     */
			&mo 2                   &mo 1
            >;
        };


	// Layer 1
        FRONT_LEFT {
            bindings = <
		&mkp LCLK 				&mo BACKWARD_SCROLL
		&mkp MCLK				&mkp MCLK 				
		&kp ESC      &kp C    &kp D		&mkp RCLK
	                   /* Inner Buttons  */
		            &trans &trans &trans
               /* Orientation (Front/Backward)   Handiness L/R     */
			&trans                  &trans
            >;
        };

	// Layer 2
        BACK_LEFT {
            bindings = <
		&mkp RCLK				&kp ESC
		&mkp MCLK				&mkp MCLK 				
		&mo BACKWARD_SCROLL     &kp E    &kp F	&mkp LCLK
	                   /* Inner Buttons  */
		            &trans &trans &trans
               /* Orientation (Front/Backward)   Handiness L/R     */
			&trans                 &trans
            >;
         };

	// Layer 3
        BACK_RIGHT {
            bindings = <
		&kp ESC         			&mkp RCLK		
		&mkp MCLK  				&mkp MCLK	
		&mkp LCLK 	&kp G    &kp H		&mo BACKWARD_SCROLL 
	                   /* Inner Buttons  */
		            &trans &trans &trans
               /* Orientation (Front/Backward)   Handiness L/R     */
			&trans                 &trans
            >;
        };
 
//   		 RC(0,5)    			    RC(0,2) 
//		 RC(0,4)	/* Ball */	    RC(0,1)
//	         RC(0,3)    RC(0,12)	RC(0,11)    RC(0,0) 
//                   /* Buttons on top of the middle deck */
//  		       /*  BTReset BTSelect Unlock  */ 
//                          RC(0,8) RC(0,7)  RC(0,6)        
//               /* Slider switches on the bottom of the middle deck */                                                         /
//		/* Orientation (Front/Backward)   Handiness L/R     */
//                       RC(0,10)        	     RC(0,9)              

	// Scroll layers do nothing by themselves, it is completely transparent.
	// It is detected in trackball_listener telling to switch from the pointing movement to scrolling.
	// Need separate layers for orientation to implement 
 	// Layers 4, 5
/* 4 */ FRONT_SCROLL  	    {bindings = <&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans>;};
/* 5 */ BACKWARD_SCROLL     {bindings = <&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans>;};

        extra1 {status = "reserved";};
        extra2 {status = "reserved";};
        extra3 {status = "reserved";};
        extra4 {status = "reserved";};
        extra5 {status = "reserved";};
        extra6 {status = "reserved";};
        extra7 {status = "reserved";};
        extra8  {status = "reserved";};

     };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <FRONT_LEFT BACK_LEFT>;
            then-layer = <BACK_RIGHT>;
        };
    };

};
